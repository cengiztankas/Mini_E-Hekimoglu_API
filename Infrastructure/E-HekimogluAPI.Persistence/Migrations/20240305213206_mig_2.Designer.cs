// <auto-generated />
using System;
using E_HekimogluAPI.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_HekimogluAPI.Persistence.Migrations
{
    [DbContext(typeof(EHekimogluApiDbContext))]
    [Migration("20240305213206_mig_2")]
    partial class mig_2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BedenProduct", b =>
                {
                    b.Property<Guid>("BedensId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ProductsId")
                        .HasColumnType("char(36)");

                    b.HasKey("BedensId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("BedenProduct");
                });

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.Property<Guid>("CategoriesId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ProductsId")
                        .HasColumnType("char(36)");

                    b.HasKey("CategoriesId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("CategoryProduct");
                });

            modelBuilder.Entity("E_HekimogluAPI.Domain.Entities.BagcikMalzemesi.Bagcik", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Adet")
                        .HasColumnType("int");

                    b.Property<string>("Adı")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("BagcikKategoriId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Barkod")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid>("RenkId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("BagcikKategoriId");

                    b.HasIndex("Barkod")
                        .IsUnique();

                    b.HasIndex("RenkId");

                    b.ToTable("Bagciks");
                });

            modelBuilder.Entity("E_HekimogluAPI.Domain.Entities.BagcikMalzemesi.BagcikKategori", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("BagcikKategoris");
                });

            modelBuilder.Entity("E_HekimogluAPI.Domain.Entities.Beden", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("No")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Bedens");
                });

            modelBuilder.Entity("E_HekimogluAPI.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsBannaer")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsHome")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("E_HekimogluAPI.Domain.Entities.Cinsiyet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsBanner")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsHome")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Cinsiyets");
                });

            modelBuilder.Entity("E_HekimogluAPI.Domain.Entities.Kesimhane.KesimKategori", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("KesimKategoris");
                });

            modelBuilder.Entity("E_HekimogluAPI.Domain.Entities.Kesimhane.KesimMalzeme", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Barkod")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("GelisFiyat")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Gramaj")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid>("KesimKategoriId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("MalzemeRafId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Miktar")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("RenkId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Barkod")
                        .IsUnique();

                    b.HasIndex("KesimKategoriId");

                    b.HasIndex("MalzemeRafId");

                    b.HasIndex("RenkId");

                    b.ToTable("KesimMalzemes");
                });

            modelBuilder.Entity("E_HekimogluAPI.Domain.Entities.Kesimhane.MalzemeRaf", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Barkod")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("MalzemeRafs");
                });

            modelBuilder.Entity("E_HekimogluAPI.Domain.Entities.KutuKoli.Koli", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Adet")
                        .HasColumnType("int");

                    b.Property<string>("Barkod")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Gramaj")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid>("KoliKategoriId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Barkod")
                        .IsUnique();

                    b.HasIndex("KoliKategoriId");

                    b.ToTable("Koli");
                });

            modelBuilder.Entity("E_HekimogluAPI.Domain.Entities.KutuKoli.KoliKategori", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("KoliKategoris");
                });

            modelBuilder.Entity("E_HekimogluAPI.Domain.Entities.Marka", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsHome")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Markas");
                });

            modelBuilder.Entity("E_HekimogluAPI.Domain.Entities.Material", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("E_HekimogluAPI.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("CinsiyetId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsHome")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsIndirimde")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsKargoBedava")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("MarkasId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double?>("OldPrice")
                        .HasColumnType("double");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("SalesAmount")
                        .HasColumnType("int");

                    b.Property<int?>("Stock")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CinsiyetId");

                    b.HasIndex("MarkasId");

                    b.HasIndex("ProductCode")
                        .IsUnique();

                    b.ToTable("Products");
                });

            modelBuilder.Entity("E_HekimogluAPI.Domain.Entities.Renk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RenkKodu")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Renks");
                });

            modelBuilder.Entity("E_HekimogluAPI.Domain.Entities.Taban.TabanKategori", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("TabanKategoris");
                });

            modelBuilder.Entity("E_HekimogluAPI.Domain.Entities.Taban.TabanKayıt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Barkod")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("GelisFiyat")
                        .HasColumnType("int");

                    b.Property<int>("Miktar")
                        .HasColumnType("int");

                    b.Property<Guid>("TabanKategoriId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Barkod")
                        .IsUnique();

                    b.HasIndex("TabanKategoriId");

                    b.ToTable("TabanKayıts");
                });

            modelBuilder.Entity("E_HekimogluAPI.Domain.Entities.TutkalMalzemesi.Tutkal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Adet")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Barkod")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Gramaj")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("TutkalKategoriId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("fiyat")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("Barkod")
                        .IsUnique();

                    b.HasIndex("TutkalKategoriId");

                    b.ToTable("Tutkals");
                });

            modelBuilder.Entity("E_HekimogluAPI.Domain.Entities.TutkalMalzemesi.TutkalKategori", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("TutkalKategoris");
                });

            modelBuilder.Entity("MaterialProduct", b =>
                {
                    b.Property<Guid>("MateryalsId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ProductsId")
                        .HasColumnType("char(36)");

                    b.HasKey("MateryalsId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("MaterialProduct");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ProductRenk", b =>
                {
                    b.Property<Guid>("RenksId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("productsId")
                        .HasColumnType("char(36)");

                    b.HasKey("RenksId", "productsId");

                    b.HasIndex("productsId");

                    b.ToTable("ProductRenk");
                });

            modelBuilder.Entity("RenkTabanKayıt", b =>
                {
                    b.Property<Guid>("RenksId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TabanKayıtsId")
                        .HasColumnType("char(36)");

                    b.HasKey("RenksId", "TabanKayıtsId");

                    b.HasIndex("TabanKayıtsId");

                    b.ToTable("RenkTabanKayıt");
                });

            modelBuilder.Entity("BedenProduct", b =>
                {
                    b.HasOne("E_HekimogluAPI.Domain.Entities.Beden", null)
                        .WithMany()
                        .HasForeignKey("BedensId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_HekimogluAPI.Domain.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.HasOne("E_HekimogluAPI.Domain.Entities.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_HekimogluAPI.Domain.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_HekimogluAPI.Domain.Entities.BagcikMalzemesi.Bagcik", b =>
                {
                    b.HasOne("E_HekimogluAPI.Domain.Entities.BagcikMalzemesi.BagcikKategori", "BagcikKategori")
                        .WithMany("Bagciks")
                        .HasForeignKey("BagcikKategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_HekimogluAPI.Domain.Entities.Renk", "Renk")
                        .WithMany("Bagciks")
                        .HasForeignKey("RenkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BagcikKategori");

                    b.Navigation("Renk");
                });

            modelBuilder.Entity("E_HekimogluAPI.Domain.Entities.Kesimhane.KesimMalzeme", b =>
                {
                    b.HasOne("E_HekimogluAPI.Domain.Entities.Kesimhane.KesimKategori", "KesimKategori")
                        .WithMany("KesimMalzemes")
                        .HasForeignKey("KesimKategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_HekimogluAPI.Domain.Entities.Kesimhane.MalzemeRaf", "MalzemeRaf")
                        .WithMany("KesimMalzemes")
                        .HasForeignKey("MalzemeRafId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_HekimogluAPI.Domain.Entities.Renk", "Renk")
                        .WithMany("RenkKesimMalzemes")
                        .HasForeignKey("RenkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KesimKategori");

                    b.Navigation("MalzemeRaf");

                    b.Navigation("Renk");
                });

            modelBuilder.Entity("E_HekimogluAPI.Domain.Entities.KutuKoli.Koli", b =>
                {
                    b.HasOne("E_HekimogluAPI.Domain.Entities.KutuKoli.KoliKategori", "KoliKategori")
                        .WithMany("Kolis")
                        .HasForeignKey("KoliKategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KoliKategori");
                });

            modelBuilder.Entity("E_HekimogluAPI.Domain.Entities.Product", b =>
                {
                    b.HasOne("E_HekimogluAPI.Domain.Entities.Cinsiyet", "Cinsiyet")
                        .WithMany("products")
                        .HasForeignKey("CinsiyetId");

                    b.HasOne("E_HekimogluAPI.Domain.Entities.Marka", "Markas")
                        .WithMany("products")
                        .HasForeignKey("MarkasId");

                    b.Navigation("Cinsiyet");

                    b.Navigation("Markas");
                });

            modelBuilder.Entity("E_HekimogluAPI.Domain.Entities.Taban.TabanKayıt", b =>
                {
                    b.HasOne("E_HekimogluAPI.Domain.Entities.Taban.TabanKategori", "TabanKategori")
                        .WithMany("TabanKayıts")
                        .HasForeignKey("TabanKategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TabanKategori");
                });

            modelBuilder.Entity("E_HekimogluAPI.Domain.Entities.TutkalMalzemesi.Tutkal", b =>
                {
                    b.HasOne("E_HekimogluAPI.Domain.Entities.TutkalMalzemesi.TutkalKategori", "TutkalKategori")
                        .WithMany("Tutkals")
                        .HasForeignKey("TutkalKategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TutkalKategori");
                });

            modelBuilder.Entity("MaterialProduct", b =>
                {
                    b.HasOne("E_HekimogluAPI.Domain.Entities.Material", null)
                        .WithMany()
                        .HasForeignKey("MateryalsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_HekimogluAPI.Domain.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductRenk", b =>
                {
                    b.HasOne("E_HekimogluAPI.Domain.Entities.Renk", null)
                        .WithMany()
                        .HasForeignKey("RenksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_HekimogluAPI.Domain.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("productsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RenkTabanKayıt", b =>
                {
                    b.HasOne("E_HekimogluAPI.Domain.Entities.Renk", null)
                        .WithMany()
                        .HasForeignKey("RenksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_HekimogluAPI.Domain.Entities.Taban.TabanKayıt", null)
                        .WithMany()
                        .HasForeignKey("TabanKayıtsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_HekimogluAPI.Domain.Entities.BagcikMalzemesi.BagcikKategori", b =>
                {
                    b.Navigation("Bagciks");
                });

            modelBuilder.Entity("E_HekimogluAPI.Domain.Entities.Cinsiyet", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("E_HekimogluAPI.Domain.Entities.Kesimhane.KesimKategori", b =>
                {
                    b.Navigation("KesimMalzemes");
                });

            modelBuilder.Entity("E_HekimogluAPI.Domain.Entities.Kesimhane.MalzemeRaf", b =>
                {
                    b.Navigation("KesimMalzemes");
                });

            modelBuilder.Entity("E_HekimogluAPI.Domain.Entities.KutuKoli.KoliKategori", b =>
                {
                    b.Navigation("Kolis");
                });

            modelBuilder.Entity("E_HekimogluAPI.Domain.Entities.Marka", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("E_HekimogluAPI.Domain.Entities.Renk", b =>
                {
                    b.Navigation("Bagciks");

                    b.Navigation("RenkKesimMalzemes");
                });

            modelBuilder.Entity("E_HekimogluAPI.Domain.Entities.Taban.TabanKategori", b =>
                {
                    b.Navigation("TabanKayıts");
                });

            modelBuilder.Entity("E_HekimogluAPI.Domain.Entities.TutkalMalzemesi.TutkalKategori", b =>
                {
                    b.Navigation("Tutkals");
                });
#pragma warning restore 612, 618
        }
    }
}
